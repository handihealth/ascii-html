{"name":"Ascii-html","tagline":"","body":"---\r\nauthor:\r\n- 'EhrScape <info@ehrscape.com>'\r\ndate: April 2014\r\ntitle: REST API Examples\r\n...\r\n\r\nGetting Started\r\n===============\r\n\r\nThis guide is designed to help you explore and learn about the API.\r\n\r\nAudience\r\n--------\r\n\r\nThe easiest way to start learning about the API is to study sample code.\r\nThis tutorial is designed for people familiar with the Javascript\r\nprogramming concepts. There are already many good [Javascript\r\ntutorials](http://www.google.com/search?q=javascript+tutorials)\r\navailable on the Web. The REST API is designed to be easily accessible\r\nfrom any programming language – once you understand the basic concepts\r\nof the API, you will be able to apply them in most programming\r\nlanguages.\r\n\r\nPre-requisites\r\n--------------\r\n\r\n### Supporting libraries\r\n\r\nTo interact with the REST API, a client application needs to construct\r\nHTTP requests. For making JSON based API calls and deal with the\r\nreturned data we are using jQuery javascript library. For more info see\r\n[jQuery home page](http://jquery.com).\r\n\r\n### Context variables\r\n\r\nThroughout this guide we are using the following predefined variables\r\nand functions to improve the readability of the code:\r\n\r\n-   variable `baseUrl`: holds the base url of the REST service. To get\r\n    to a specific REST service we’ll append it to the base url, i.e.:\r\n\r\n<!-- -->\r\n\r\n    var baseUrl = 'https://rest.ehrscape.com/rest/v1';\r\n    var queryUrl = baseUrl + '/query';\r\n\r\n-   variable `ehrId`: holds our sample patient’s ehrId.\r\n\r\n-   function `getSessionId()`: is used to obtain a session (ehr session)\r\n    used for authentication. In most applications this session is\r\n    injected as part of the application context and would not be\r\n    directly handled by javascript.\r\n\r\n### Base HTML page\r\n\r\nAll examples bellow are displaying the data retrieved from the server in\r\na very simple HTML page. Here is the source of a skeleton page:\r\n\r\n``` {.html}\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\r\n    <title>Think!EHR Rest Example</title>\r\n    <script src=\"//ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js\"></script>\r\n    <script src=\"js/example.js\"></script>\r\n</head>\r\n<body>\r\n\r\n<h3 id=\"header\">\r\n    <!-- header will be rendered here -->\r\n</h3>\r\n<div id=\"result\">\r\n    <!-- result will be rendered here -->\r\n</div>\r\n</body>\r\n</html>\r\n```\r\n\r\n### Function `getSessionId()`\r\n\r\nFor clarity here’s a basic example of the function:\r\n\r\n``` {.js}\r\nfunction getSessionId() {\r\n    var response = $.ajax({\r\n        type: \"POST\",\r\n        url: baseUrl + \"/session?username=\" + encodeURIComponent(username) +\r\n                \"&password=\" + encodeURIComponent(password),\r\n        async: false\r\n    });\r\n    return response.responseJSON.sessionId;\r\n}\r\n```\r\n\r\nNote: Refer to Recommendations and Best Practices in Managing HTTP-Based\r\nClient Sessions. There are better implementations of session handling\r\nfunction, but this is not the focus of this guide.\r\n\r\nThe \"Hello World\" example\r\n-------------------------\r\n\r\nLet’s use REST API to fetch some data! The following example shows how\r\nto get information about body temperatures measured for a sample patient\r\nwith a predefined `ehrId`.\r\n\r\nIn this example, the following API call is used:\r\n\r\n-   `GET /view/{ehrId}/body_temperature`: returns body temperatures\r\n    measured for the specified EHR ([see\r\n    details](https://dev.ehrscape.com/api-explorer.html?api=thinkehr&service=/view&operation=/view/%7BehrId%7D/body_temperature&method=GET&inline=false)).\r\n\r\n``` {.js}\r\n$.ajax({\r\n    url: baseUrl + \"/view/\" + ehrId + \"/body_temperature\",\r\n    type: 'GET',\r\n    headers: {\r\n        \"Ehr-Session\": sessionId\r\n    },\r\n    success: function (res) {\r\n        $(\"#header\").append(\"Body Temperatures\");\r\n        for (var i in res) {\r\n            $(\"#result\").append(res[i].time + ': ' + res[i].temperature  + res[i].unit + \"<br>\");\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nWhich returns the following result:\r\n\r\n    Body Temperatures\r\n\r\n    2014-03-05T04:01:37.000Z: 37°C\r\n    2014-02-14T00:57:00.000Z: 37.4°C\r\n    2014-02-07T20:44:28.000Z: 37.1°C\r\n    2014-01-23T01:26:05.000Z: 39.7°C\r\n    2014-01-11T16:48:31.000Z: 37°C\r\n\r\nIn addition to retrieving the last set of measured temperatures, it’s\r\nalso possible to filter results by date. The API description for the\r\nbody\\_temperature view lists a parameter `from` which requires an ISO\r\nformatted date (and possibly time) as input. For ISO date and time\r\nformats see [ISO8601](http://en.wikipedia.org/wiki/ISO_8601).\r\n\r\nHere’s an example with filtering:\r\n\r\n``` {.js}\r\n$.ajax({\r\n    url: baseUrl + \"/view/\" + ehrId + \"/body_temperature\",\r\n    type: 'GET',\r\n    data: {\r\n        from: '2014-3-1'\r\n    },\r\n    headers: {\r\n        \"Ehr-Session\": sessionId\r\n    },\r\n    success: function (res) {\r\n        $(\"#header\").append(\"Body Temperatures\");\r\n        for (var i in res) {\r\n            $(\"#result\").append(res[i].time + ': ' + res[i].temperature + res[i].unit + \"<br>\");\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nwhich, as expected, returns the following result:\r\n\r\n    Body Temperatures\r\n\r\n    2014-03-05T04:01:37.000Z: 37°C\r\n\r\nDisplay a patient’s name along with measurement data\r\n----------------------------------------------------\r\n\r\nThe purpose of this example is to introduce the usage of a demographic\r\nAPI to also print patient name along with the result of weight\r\nmeasurements.\r\n\r\nThe following API calls are used:\r\n\r\n-   `GET /demographics/ehr/{ehrId}/party`: retrieves patient’s\r\n    demographic data ([see\r\n    details](https://dev.ehrscape.com/api-explorer.html?api=thinkehr&service=/demographics&operation=/demographics/ehr/%7BehrId%7D/party&method=GET&inline=false)).\r\n\r\n-   `GET /view/{ehrId}/weight`: returns weight measurements for the\r\n    specified EHR ([see\r\n    details](https://dev.ehrscape.com/api-explorer.html?api=thinkehr&service=/view&operation=/view/%7BehrId%7D/weight&method=GET&inline=false)).\r\n\r\n``` {.js}\r\n$.ajax({\r\n    url: baseUrl + \"/demographics/ehr/\" + ehrId + \"/party\",\r\n    type: 'GET',\r\n    headers: {\r\n        \"Ehr-Session\": sessionId\r\n    },\r\n    success: function (data) {\r\n        var party = data.party;\r\n        $(\"#header\").append(\"Weight measurements for \" + party.firstNames + ' ' +\r\n                                                         party.lastNames);\r\n    }\r\n});\r\n$.ajax({\r\n    url: baseUrl + \"/view/\" + ehrId + \"/weight\",\r\n    type: 'GET',\r\n    headers: {\r\n        \"Ehr-Session\": sessionId\r\n    },\r\n    success: function (res) {\r\n        for (var i in res) {\r\n            $(\"#result\").append(res[i].time + ': ' + res[i].weight + res[i].unit + \"<br>\");\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nwhich returns the following result:\r\n\r\n    Weight measurements for Desiree Hanson\r\n\r\n    2014-03-09T19:25:20.000Z: 66.7kg\r\n    2014-02-27T00:49:07.000Z: 66.7kg\r\n    2014-02-07T00:29:51.000Z: 65.3kg\r\n    2014-02-03T14:03:21.000Z: 66.7kg\r\n    2014-02-01T15:00:40.000Z: 68kg\r\n    2014-01-02T17:48:55.000Z: 66.8kg\r\n\r\nCreate a new patient\r\n--------------------\r\n\r\nThe purpose of this example is to show how to create a new patient via\r\ndemographics API and create his or her EHR.\r\n\r\nThe following API calls are used:\r\n\r\n-   `POST /ehr`: creates a new EHR ([see\r\n    details](https://dev.ehrscape.com/api-explorer.html?api=thinkehr&service=/ehr&operation=/ehr&method=POST&inline=false)).\r\n\r\n-   `POST /demographics/party`: creates a new party in the demographics\r\n    server and stores an ehrId ([see\r\n    details](https://dev.ehrscape.com/api-explorer.html?api=thinkehr&service=/demographics&operation=/demographics/party&method=POST&inline=false)).\r\n\r\n``` {.js}\r\n$.ajaxSetup({\r\n    headers: {\r\n        \"Ehr-Session\": sessionId\r\n    }\r\n});\r\n$.ajax({\r\n    url: baseUrl + \"/ehr\",\r\n    type: 'POST',\r\n    success: function (data) {\r\n        var ehrId = data.ehrId;\r\n        $(\"#header\").html(\"EHR: \" + ehrId);\r\n\r\n        // build party data\r\n        var partyData = {\r\n            firstNames: \"Mary\",\r\n            lastNames: \"Wilkinson\",\r\n            dateOfBirth: \"1982-7-18T19:30\",\r\n            partyAdditionalInfo: [\r\n                {\r\n                    key: \"ehrId\",\r\n                    value: ehrId\r\n                }\r\n            ]\r\n        };\r\n        $.ajax({\r\n            url: baseUrl + \"/demographics/party\",\r\n            type: 'POST',\r\n            contentType: 'application/json',\r\n            data: JSON.stringify(partyData),\r\n            success: function (party) {\r\n                if (party.action == 'CREATE') {\r\n                    $(\"#result\").html(\"Created: \" + party.meta.href);\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n```\r\n\r\nwhich returns the following result:\r\n\r\n    EHR: 8521e620-d38e-4fd6-9071-f785c2ece9b3\r\n\r\n    Created: https://rest.ehrscape.com/rest/v1/demographics/party/104\r\n\r\nSearch for a patient by name\r\n----------------------------\r\n\r\nThe purpose of this example is to show how to find a patient by name.\r\n\r\nThe following API call is used:\r\n\r\n-   `POST /demographics/party/query`: searches for a party using the\r\n    party’s name ([see\r\n    details](https://dev.ehrscape.com/api-explorer.html?api=thinkehr&service=/demographics&operation=/demographics/party/query&method=POST&inline=false)).\r\n\r\n``` {.js}\r\n$.ajaxSetup({\r\n    headers: {\r\n        \"Ehr-Session\": sessionId\r\n    }\r\n});\r\nvar searchData = [\r\n    {key: \"firstNames\", value: \"Mary\"},\r\n    {key: \"lastNames\", value: \"Wilkinson\"}\r\n];\r\n$.ajax({\r\n    url: baseUrl + \"/demographics/party/query\",\r\n    type: 'POST',\r\n    contentType: 'application/json',\r\n    data: JSON.stringify(searchData),\r\n    success: function (res) {\r\n        $(\"#header\").html(\"Search for Mary Wilkinson\");\r\n        for (i in res.parties) {\r\n            var party = res.parties[i];\r\n            var ehrId;\r\n            for (j in party.partyAdditionalInfo) {\r\n                if (party.partyAdditionalInfo[j].key === 'ehrId') {\r\n                    ehrId = party.partyAdditionalInfo[j].value;\r\n                    break;\r\n                }\r\n            }\r\n            $(\"#result\").append(party.firstNames + ' ' + party.lastNames +\r\n                ' (ehrId = ' + ehrId + ')<br>');\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nwhich returns the following result:\r\n\r\n    Search for Mary Wilkinson\r\n\r\n    Mary Wilkinson (ehrId = 8521e620-d38e-4fd6-9071-f785c2ece9b3)\r\n\r\nSearch for a patient by ehrId\r\n-----------------------------\r\n\r\nThe purpose of this example is to show how to find a patient by his or\r\nher EHR ID.\r\n\r\nThe following API call is used:\r\n\r\n-   `POST /demographics/party/query`: searches for a party using a\r\n    patient’s ehrId ([see\r\n    details](https://dev.ehrscape.com/api-explorer.html?api=thinkehr&service=/demographics&operation=/demographics/party/query&method=GET&inline=false)).\r\n\r\n``` {.js}\r\n$.ajaxSetup({\r\n    headers: {\r\n        \"Ehr-Session\": sessionId\r\n    }\r\n});\r\nvar searchData = [\r\n    {key: \"ehrId\", value: \"8521e620-d38e-4fd6-9071-f785c2ece9b3\"}\r\n];\r\n$.ajax({\r\n    url: baseUrl + \"/demographics/party/query\",\r\n    type: 'POST',\r\n    contentType: 'application/json',\r\n    data: JSON.stringify(searchData),\r\n    success: function (res) {\r\n        $(\"#header\").html(\"Search by ehrId 8521e620-d38e-4fd6-9071-f785c2ece9b3\");\r\n        for (i in res.parties) {\r\n            var party = res.parties[i];\r\n            $(\"#result\").append(party.firstNames + ' ' + party.lastNames + '<br>');\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nwhich returns the following result:\r\n\r\n    Search by ehrId 8521e620-d38e-4fd6-9071-f785c2ece9b3\r\n\r\n    Mary Wilkinson\r\n\r\nSave a new set of measurements of a patient’s body temperature, blood pressure, height and weight\r\n-------------------------------------------------------------------------------------------------\r\n\r\nThe purpose of this example is to show how to store a new set of\r\nmeasurements.\r\n\r\nThe following API call is used:\r\n\r\n-   `POST /composition`: stores a new composition (document) with\r\n    measurements ([see\r\n    details](https://dev.ehrscape.com/api-explorer.html?api=thinkehr&service=/composition&operation=/composition&method=POST&inline=false))\r\n\r\n``` {.js}\r\n$.ajaxSetup({\r\n    headers: {\r\n        \"Ehr-Session\": sessionId\r\n    }\r\n});\r\nvar compositionData = {\r\n    \"ctx/time\": \"2014-3-19T13:10Z\",\r\n    \"ctx/language\": \"en\",\r\n    \"ctx/territory\": \"CA\",\r\n    \"vital_signs/body_temperature/any_event/temperature|magnitude\": 37.1,\r\n    \"vital_signs/body_temperature/any_event/temperature|unit\": \"°C\",\r\n    \"vital_signs/blood_pressure/any_event/systolic\": 120,\r\n    \"vital_signs/blood_pressure/any_event/diastolic\": 90,\r\n    \"vital_signs/height_length/any_event/body_height_length\": 171,\r\n    \"vital_signs/body_weight/any_event/body_weight\": 57.2\r\n};\r\nvar queryParams = {\r\n    \"ehrId\": ehrId,\r\n    templateId: 'Vital Signs',\r\n    format: 'FLAT',\r\n    committer: 'Belinda Nurse'\r\n};\r\n$.ajax({\r\n    url: baseUrl + \"/composition?\" + $.param(queryParams),\r\n    type: 'POST',\r\n    contentType: 'application/json',\r\n    data: JSON.stringify(compositionData),\r\n    success: function (res) {\r\n        $(\"#header\").html(\"Store composition\");\r\n        $(\"#result\").html(res.meta.href);\r\n    }\r\n});\r\n```\r\n\r\nwhich returns the following result:\r\n\r\n    Store composition\r\n\r\n    https://rest.ehrscape.com/rest/v1/composition/75c7bb72-0e7f-4a06-983e-73833a5c9615::ehrscape.com::1\r\n\r\nLet’s retrieve one of these measurements by using the view call\r\n`GET /view/{ehrId}/blood_pressure`:\r\n\r\n``` {.js}\r\n$.ajaxSetup({\r\n    headers: {\r\n        \"Ehr-Session\": sessionId\r\n    }\r\n});\r\n$.ajax({\r\n    url: baseUrl + \"/view/\" + ehrId + \"/blood_pressure\",\r\n    type: 'GET',\r\n    success: function (res) {\r\n        $(\"#header\").html(\"Blood pressures\");\r\n        for (var i in res) {\r\n            $(\"#result\").append(res[i].time + ': ' + res[i].systolic + '/' + res[i].diastolic + res[i].unit + \"<br>\");\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nwhich returns the following result:\r\n\r\n    Blood pressures\r\n\r\n    2014-03-19T13:10:00.000Z: 120/90mm[Hg]\r\n\r\nQuery data using AQL\r\n--------------------\r\n\r\nThe purpose of this example is to show how to use a very simple\r\n[AQL](http://www.openehr.org/wiki/display/spec/Archetype+Query+Language+Description)\r\nfor querying.\r\n\r\nThe following API call is used:\r\n\r\n-   `GET /query`: queries data using AQL ([see\r\n    details](https://dev.ehrscape.com/api-explorer.html?api=thinkehr&service=/query&operation=/query&method=GET&inline=false))\r\n\r\n``` {.js}\r\n$.ajaxSetup({\r\n    headers: {\r\n        \"Ehr-Session\": sessionId\r\n    }\r\n});\r\nvar aql = \"SELECT c/uid/value as uid, \" +\r\n    \"c/context/start_time as time, \" +\r\n    \"c/name/value as name \" +\r\n    \"FROM EHR[ehr_id/value = '\" + ehrId + \"'] CONTAINS COMPOSITION c \" +\r\n    \"ORDER BY c/context/start_time DESC\";\r\n$.ajax({\r\n    url: baseUrl + \"/query?\" + $.param({\"aql\": aql}),\r\n    type: 'GET',\r\n    success: function (res) {\r\n        $(\"#header\").html(\"Compositions\");\r\n        var rows = res.resultSet;\r\n        for (var i in rows) {\r\n            $(\"#result\").append(rows[i].uid + ': ' + rows[i].name + ' (on ' +\r\n                                rows[i].time.value + \")<br>\");\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nwhich returns the following result:\r\n\r\n    Compositions\r\n\r\n    4f3e47ab-e350-4994-a15e-e819533aba14::ehrscape.com::1: Vital Signs (on 2014-03-09T20:25:20.000+01:00)\r\n    fbc6d182-1720-4e99-aec9-b0f925639c66::ehrscape.com::1: Vital Signs (on 2014-03-07T18:31:54.000+01:00)\r\n    a6568a7e-0cf9-483b-8691-adb46a9fdb6b::ehrscape.com::1: Medications (on 2014-02-09T01:08:27.000+01:00)\r\n\r\nClinical decision support\r\n-------------------------\r\n\r\nThe purpose of this example is to show how to execute a simple guide\r\nusing the CDS API.\r\n\r\nThe following API call is used:\r\n\r\n-   `GET /guide/execute/{guideId}/{ehrIds}`: executes CDS guide ([see\r\n    details](https://dev.ehrscape.com/api-explorer.html?api=thinkcds&service=/guide&operation=/guide/execute/%7BguideId%7D/%7BehrIds%7D&method=GET&inline=false))\r\n\r\n``` {.js}\r\nfunction bmi() {\r\n    return $.ajax({\r\n        url: cdsUrl + \"/guide/execute/BMI.Calculation.v.1/\" + ehrId,\r\n        type: 'GET',\r\n        headers: {\r\n            \"Ehr-Session\": sessionId\r\n        },\r\n        success: function (data) {\r\n            if (data instanceof Array) {\r\n                if (data[0].hasOwnProperty('results')) {\r\n                    data[0].results.forEach(function (v, k) {\r\n                        if (v.archetypeId === 'openEHR-EHR-OBSERVATION.body_mass_index.v1') {\r\n                            var rounded = Math.round(v.value.magnitude * 100.0) / 100.0;\r\n                            $(\"#result\").append('BMI: ' + rounded);\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction login() {\r\n    return $.ajax({\r\n        type: \"POST\",\r\n        url: baseUrl + \"/session?\" + $.param({username: username, password: password}),\r\n        success: function (res) {\r\n            sessionId = res.sessionId;\r\n        }\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n    return $.ajax({\r\n        type: \"DELETE\",\r\n        url: baseUrl + \"/session\",\r\n        headers: {\r\n            \"Ehr-Session\": sessionId\r\n        }\r\n    });\r\n}\r\n\r\nlogin().done(function() {\r\n    $.when(bmi()).then(logout);\r\n});\r\n```\r\n\r\nwhich returns the following result:\r\n\r\n    BMI: 26.08\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}